ROADMAP (future version, change required for that version)

WISHLIST (past version, change that was suggested during that version)
0.03 	TST push-down parser example (JSON?)
0.03	TST ad-hoc parser example (aka ini file)
0.03	TST Add improved PSGI example to show inheritance power.
0.04	TST Expect example (run external program, control execution flow,
		enter passwd)

FAR WISHLIST (past version, change that was suggested during that version)
0.02	TST anyevent example
0.03	DOC More rationale & basic SM discussion (?)
0.03	DEV state graph object, stringify
0.03	DEV per machine stats (now many in which state) (do we need it? )
0.03	API state redefine properties w/o changing sub
0.03	TST Add distributed connected machines example.
0.03	DEV test_contract( $class ) - check that $class is ready for SM usage
0.04	TST nested machine example - low-level machine assembling events
		for high-level one
0.04	TST inherited machine example
0.05	API send_event() via queue for reenterability
			if (Q) { push Q } else { local Q = []; while (shift Q) handle; }
			(but what with return values?)
0.05	API return value callback
0.05	API sm_transition locking (like states) & uniqueness check
0.05	API FSM::Arrow::Builder - construct machine state-by-state.

DISCUSSION ITEMS
0.02	Extract FSM::Arrow::Schema?
0.03	Extract State object? (Will kill perf)
0.03	Short-circuit transitions? 
		(i.e. next state gets the same event immediately)
0.03	All-state transitions? (e.g. disconnect on a phone call)
0.03	Chained handlers? (i.e. handler1 returned nothing => check 2 & so on)
0.03	Deferred events (cannot handle right now, but will be able to later)
		Return special value? Implement queue in Instance? Leave to implementor?

EXAMPLES
Rob https://metacpan.org/release/Web-Machine
Rob https://metacpan.org/release/FSA-Rules
Rob https://metacpan.org/pod/Class::StateMachine::Declarative
Rob https://github.com/salva/s5-state-machines

